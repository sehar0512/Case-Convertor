{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","defaultProps","TextForm","useState","text","setText","Mainheading","heading","value","onChange","e","preventDefault","target","id","rows","onClick","newText","toUpperCase","toLowerCase","a","trim","split","j","k","i","length","newChar","charAt","slice","join","Array","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4589a02e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light navColor\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;\r\n\r\nNavbar.propTypes ={\r\n    title: propTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Hello'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const convertUpperText = (e) => {\r\n    e.preventDefault();\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const convertLowerText = (e) => {\r\n    e.preventDefault();\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const SentenceCase = (e) => {\r\n    e.preventDefault();\r\n    let trimText = text.trim();\r\n    let a = trimText.split(\".\");\r\n\r\n    let j = 0;\r\n    let k = 1;\r\n    for (let i = 0; i < a.length; i++) {\r\n      let newChar = a[i].charAt(j).toUpperCase();\r\n\r\n      a[i] = newChar + a[i].slice(k).toLowerCase();\r\n      j = 1;\r\n      k = 2;\r\n    }\r\n\r\n    let newText = a.join(\". \");\r\n    setText(newText);\r\n  };\r\n  const toggleCase = (e) => {\r\n    e.preventDefault();\r\n    let a = text.split(\" \");\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n      let newChar = a[i].charAt(0).toLowerCase();\r\n\r\n      a[i] = newChar + a[i].slice(1).toUpperCase();\r\n    }\r\n\r\n    let newText = a.join(\" \");\r\n    setText(newText);\r\n  };\r\n\r\n  const alterCase = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newChar = new Array();\r\n    let i = 0;\r\n    let j = 1;\r\n    for (let a = 0; a < text.length / 2; a++) {\r\n      newChar[a] = text.charAt(i).toLowerCase() + text.charAt(j).toUpperCase();\r\n      i += 2;\r\n      j += 2;\r\n    }\r\n    let newText = newChar.join(\"\");\r\n    setText(newText);\r\n  };\r\n\r\n  const capitalCase = (e) => {\r\n    e.preventDefault();\r\n    let a = text.split(\" \");\r\n    for (let i = 0; i < a.length; i++) {\r\n      let newChar = a[i].charAt(0).toUpperCase();\r\n      a[i] = newChar + a[i].slice(1).toLowerCase();\r\n    }\r\n\r\n    let newText = a.join(\" \");\r\n    setText(newText);\r\n  };\r\n\r\n  const clearText = (e) => {\r\n    e.preventDefault();\r\n    let newText = \" \";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setText(e.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Hello, \");\r\n  return (\r\n    <>\r\n      <div className=\"container mt-3\">\r\n        <h1 className=\"mainHead\">{props.Mainheading}</h1>\r\n        <h3>\r\n          <b>{props.heading}</b>\r\n        </h3>\r\n        <div className=\"container my-3\">\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control textareaColor\"\r\n              value={text}\r\n              onChange={handleOnChange}\r\n              id=\"txtArea1\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"cont\">\r\n            <div className=\"btns\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btnColor\"\r\n                onClick={convertUpperText}\r\n              >\r\n                UPPER CASE\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btnColor\"\r\n                onClick={convertLowerText}\r\n              >\r\n                lower Case\r\n              </button>\r\n              <button type=\"button\" className=\"btnColor\" onClick={SentenceCase}>\r\n                Sentence Case\r\n              </button>\r\n\r\n              <button type=\"button\" className=\"btnColor\" onClick={toggleCase}>\r\n                tOGGLE cASE\r\n              </button>\r\n\r\n              <button type=\"button\" className=\"btnColor\" onClick={capitalCase}>\r\n                Capitalize Word\r\n              </button>\r\n\r\n              <button type=\"button\" className=\"btnColor\" onClick={alterCase}>\r\n                aLtErNaTe cAsE\r\n              </button>\r\n\r\n              <button type=\"button\" className=\"btnColor\" onClick={clearText}>\r\n                Clear\r\n              </button>\r\n            </div>\r\n            <div className=\"wordCount\">\r\n              <p className=\"pb-0 mb-0\">\r\n                {text.split(\" \").length} Words and {text.length} Charcters\r\n              </p>\r\n              <p className=\"pt-0 mt-0\">\r\n                {0.008 * text.split(\" \").length} Minutes to Read\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"container my-3\">\r\n            <h3>\r\n              <b> Text Preview </b>\r\n            </h3>\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar title=\"My Case Convertor\"/>\n      <TextForm Mainheading=\"Simple Case Convertor With React\" heading=\"Manipulate your Text\"/>\n      {/* <Navbar/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}